{"version":3,"sources":["components/MainContent/SongControls.js","components/MainContent/SongInfo.js","components/MainContent.js","components/LibrarySong.js","components/Library.js","components/Nav.js","Add.js","Main.js","App.js","index.js"],"names":["SongControls","currSong","setCurrSong","allSongs","setAllSongs","isplaying","setIsplaying","audioRef","time","setTime","getTime","Math","floor","slice","skipHandler","direction","a","currentIndex","findIndex","song","_id","length","current","play","useEffect","activeSong","map","songs","active","sliderAnim","width","animation","background","color","className","min","max","duration","value","onChange","e","currentTime","target","type","style","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","SongInfo","src","cover","alt","name","artist","MainContent","libraryUpdater","setLibraryUpdater","addSongsPane","setAddSongsPane","bgGradStyle","LibrarySong","changeFromLibraryHandler","filterStatus","selectSong","Library","setFilterStatus","Nav","Add","useState","setName","setCover","setArtist","audio","setAudio","color1","setColor1","color2","setColor2","lang","setLang","pass","setPass","submitSong","preventDefault","data","axios","post","alert","required","id","Main","unfilteredSongs","fetchedSongs","timeUpdateHandler","useRef","onSongEndHandler","filter","filterHandler","ref","onTimeUpdate","onLoadedMetadata","onEnded","App","setFetchedSongs","fetchSongsFromAPI","get","fetch","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99472239.chunk.js","sourcesContent":["import React, {useEffect} from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport {faPlay,faPause , faAngleLeft, faAngleRight} from '@fortawesome/free-solid-svg-icons'\r\nconst SongControls = ({currSong, setCurrSong, allSongs, setAllSongs, isplaying, setIsplaying, audioRef, time, setTime}) => {\r\n    const playPauseHandler = () => {\r\n        if(isplaying){\r\n            audioRef.current.pause()\r\n            setIsplaying(!isplaying)\r\n        }else{\r\n            audioRef.current.play()\r\n            setIsplaying(!isplaying)\r\n        }\r\n    }\r\n    const getTime =(time)=>{\r\n        return(\r\n            Math.floor(time/60) + \":\" + (\"0\" + Math.floor(time%60)).slice(-2)\r\n        )\r\n    }\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value;\r\n        setTime({...time, current: e.target.value})\r\n    }\r\n    const skipHandler = async (direction) => {\r\n        const currentIndex = allSongs.findIndex((song) => song._id === currSong._id)\r\n        if(direction==='next'){\r\n            await setCurrSong(allSongs[(currentIndex + 1) % allSongs.length]);\r\n        }\r\n        if(direction==='prev'){\r\n            if((currentIndex - 1)=== -1)\r\n                await setCurrSong(allSongs[allSongs.length - 1]);\r\n            else\r\n                await setCurrSong(allSongs[(currentIndex - 1) % allSongs.length]);\r\n        }\r\n        if(isplaying) audioRef.current.play()\r\n    }\r\n    useEffect(()=>{\r\n        const activeSong = allSongs.map((songs) =>{\r\n            if(songs._id===currSong._id){\r\n                return{\r\n                    ...songs, active: true\r\n                }\r\n            }else{\r\n                return{\r\n                    ...songs, active: false\r\n                }\r\n            }\r\n        });\r\n        setAllSongs(activeSong)\r\n    }, [currSong]);\r\n    const sliderAnim ={\r\n        width: `${time.animation}%`,\r\n        background: `linear-gradient(to right, ${currSong.color[0]}, ${currSong.color[1]})`\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"CurrentSongControls\">\r\n                <div className=\"TimeStamp\">\r\n                    <p>{getTime(time.current)}</p>\r\n                    <div className=\"track\">\r\n                        <input min={0} max={time.duration || 0} value={time.current} onChange={dragHandler} type=\"range\"/>\r\n                        {/* <div className=\"trackAnim\"></div> */}\r\n                        <div style={sliderAnim} className=\"trackAnim\"></div>\r\n                    </div>\r\n                    <p>{time.duration ? getTime(time.duration) : '0:00'}</p>\r\n                </div>\r\n                <div className=\"MediaControls\">\r\n                    <FontAwesomeIcon onClick={()=> skipHandler('prev')} className=\"prev\" size=\"2x\" icon={faAngleLeft} />\r\n                    <FontAwesomeIcon onClick={playPauseHandler} className=\"play\" size=\"2x\" icon={isplaying ? faPause : faPlay} />\r\n                    <FontAwesomeIcon onClick={()=> skipHandler('next')} className=\"next\" size=\"2x\" icon={faAngleRight} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongControls\r\n","import React, {useState,} from 'react'\r\nconst SongInfo = ({currSong}) => {\r\n    return (\r\n        <div>\r\n            <div className=\"CurrentSongPlayingInfo\">\r\n                <img src={currSong.cover} alt=\"\"/>\r\n                <h2>{currSong.name}</h2>\r\n                <h3>{currSong.artist}</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongInfo\r\n","import React from 'react'\r\nimport SongControls from './MainContent/SongControls'\r\nimport SongInfo from \"./MainContent/SongInfo\"\r\nconst MainContent = ({allSongs, setAllSongs, currSong, setCurrSong, isplaying, setIsplaying, audioRef, time, setTime, libraryUpdater, setLibraryUpdater, addSongsPane, setAddSongsPane}) => {\r\n    const mainContentHandler = () => {\r\n        if(libraryUpdater) setLibraryUpdater(!libraryUpdater)\r\n        if(addSongsPane) setAddSongsPane(!addSongsPane)\r\n    }\r\n    const bgGradStyle ={\r\n        background: `linear-gradient(to bottom, #fff, ${currSong.color[1]})`\r\n    }\r\n    \r\n    return (\r\n        <div className=\"AppContainer\" >\r\n            <div onClick={mainContentHandler} className={`App ${libraryUpdater ? 'maincomponent' : ''}`}>\r\n                <SongInfo currSong={currSong}/>\r\n                <SongControls \r\n                    currSong={currSong} \r\n                    isplaying={isplaying} \r\n                    setIsplaying={setIsplaying}\r\n                    audioRef={audioRef}\r\n                    time={time}\r\n                    setTime={setTime}\r\n                    allSongs={allSongs}\r\n                    setAllSongs={setAllSongs}\r\n                    setCurrSong={setCurrSong}\r\n                />\r\n            </div>\r\n            <div style={bgGradStyle} className=\"bgGrad\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainContent","import React, {useEffect} from 'react'\r\nconst LibrarySong = ({song, setAllSongs, setCurrSong, allSongs, audioRef, isplaying, setIsplaying, filterStatus}) => {\r\n    const changeFromLibraryHandler = async () =>{\r\n        const selectSong = song;\r\n        await setCurrSong(selectSong);\r\n        const activeSong = allSongs.map((songs) =>{\r\n            if(songs._id===song._id){\r\n                return{\r\n                    ...songs, active: true\r\n                }\r\n            }else{\r\n                return{\r\n                    ...songs, active: false\r\n                }\r\n            }\r\n        });\r\n        setAllSongs(activeSong)\r\n        if(isplaying) audioRef.current.play();\r\n        else{\r\n            setIsplaying(!isplaying);\r\n            audioRef.current.play();\r\n        }\r\n    }\r\n    return (\r\n        <div onClick={changeFromLibraryHandler} className={`librarySong ${song.active ? 'selectedLibrary' : ''}`}>\r\n            <img src={song.cover} alt=\"\"/>\r\n            <div className=\"songdesc\">\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LibrarySong\r\n","import React from 'react'\r\nimport LibrarySong from './LibrarySong'\r\nconst Library = ({allSongs, setAllSongs, setCurrSong, audioRef, isplaying, setIsplaying, libraryUpdater, setFilterStatus, filterStatus}) => {\r\n    const statusHandler = (e) => {\r\n        setFilterStatus(e.target.value)\r\n    }\r\n    return (\r\n        <div className={`library ${libraryUpdater ? 'activelibrary' : ''}`}>\r\n            <h2>Library</h2>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"songSelection\" className=\"selectionClass\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"en\">English</option>\r\n                    <option value=\"jp\">Japanese</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"individualLibraryComponent\">\r\n                {allSongs.map((song) =>(\r\n                    <LibrarySong song={song} setCurrSong={setCurrSong} key={song._id} allSongs={allSongs} audioRef={audioRef} \r\n                    isplaying={isplaying}\r\n                    setIsplaying={setIsplaying}\r\n                    setAllSongs={setAllSongs}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Library\r\n","import React from 'react'\r\nimport { UilCloudUpload, UilMusic } from '@iconscout/react-unicons'\r\n\r\nconst Nav = ({libraryUpdater,setLibraryUpdater, addSongsPane, setAddSongsPane}) => {\r\n    const libraryHandler = () => {\r\n        setLibraryUpdater(!libraryUpdater)\r\n    }\r\n    const addSongHandler = () => {\r\n        setAddSongsPane(!addSongsPane)\r\n    }\r\n    return (\r\n        <nav>\r\n            <h1>iMusic</h1>\r\n            <div className=\"btn\">\r\n                <button onClick={addSongHandler}>\r\n                    <UilCloudUpload />\r\n                </button>\r\n                <button onClick={libraryHandler}>\r\n                    <UilMusic />\r\n                </button>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Add = ({addSongsPane}) => {\r\n    const [name, setName] = useState('')\r\n    const [cover, setCover] = useState('')\r\n    const [artist, setArtist] = useState('')\r\n    const [audio, setAudio] = useState('')\r\n    const [color1, setColor1] = useState('')\r\n    const [color2, setColor2] = useState('')\r\n    const [lang, setLang] = useState('en')\r\n    const [pass, setPass] = useState('')\r\n\r\n    const onNameChange = (e) =>{\r\n        setName(e.target.value)\r\n    }\r\n\r\n    const onCoverChange = (e) =>{\r\n        setCover(e.target.value)\r\n    }\r\n\r\n    const onArtistChange = (e) =>{\r\n        setArtist(e.target.value)\r\n    }\r\n\r\n    const onAudioChange = (e) =>{\r\n        setAudio(e.target.value)\r\n    }\r\n\r\n    const onColor1Change = (e) =>{\r\n        setColor1(e.target.value)\r\n    }\r\n\r\n    const onColor2Change = (e) =>{\r\n        setColor2(e.target.value)\r\n    }\r\n\r\n    const onLangChange = (e) =>{\r\n        setLang(e.target.value)\r\n    }\r\n\r\n    const onPassChange = (e) =>{\r\n        setPass(e.target.value)\r\n    }\r\n\r\n    const submitSong = async (e) =>{\r\n        e.preventDefault()\r\n        const color = [color1, color2]\r\n        const data = {\r\n            name, cover, artist, audio, color, lang\r\n        }\r\n        if(pass===\"Qwerty@21\"){\r\n            await axios.post('https://imusic-rest-api.herokuapp.com/', data)\r\n            alert(\"Song Added to DB\")\r\n            setName('')\r\n            setCover('')\r\n            setArtist('')\r\n            setAudio('')\r\n            setColor1('')\r\n            setColor2('')\r\n            setPass('')\r\n        }\r\n        else{\r\n            alert(\"You are not authenticated to add Songs.\")\r\n            setName('')\r\n            setCover('')\r\n            setArtist('')\r\n            setAudio('')\r\n            setColor1('')\r\n            setColor2('')\r\n            setPass('')\r\n        }\r\n    }\r\n    return (\r\n        <div className={`container ${addSongsPane? 'containerShow':''}`} >\r\n            <h2>Add Songs</h2>\r\n            <form>\r\n                <div className=\"inputBox\">\r\n                    <input type=\"text\" name=\"pass\" required=\"required\" onChange={onPassChange} value={pass} />\r\n                    <label>Password</label>\r\n                </div>\r\n                <div className=\"inputBox\">\r\n                    <input type=\"text\" name=\"name\" required=\"required\" onChange={onNameChange} value={name}/>\r\n                    <label>Song Name</label>\r\n                </div>\r\n                <div className=\"inputBox\">\r\n                    <input type=\"text\" name=\"cover\" required=\"required\" onChange={onCoverChange} value={cover}/>\r\n                    <label>Cover Image</label>\r\n                </div>\r\n                <div className=\"inputBox\">\r\n                    <input type=\"text\" name=\"artist\" required=\"required\" onChange={onArtistChange} value={artist} />\r\n                    <label>Artist Name</label>\r\n                </div>\r\n                <div className=\"inputBox\">\r\n                    <input type=\"text\" name=\"audio\" required=\"required\" onChange={onAudioChange} value={audio} />\r\n                    <label>Audio Link</label>\r\n                </div>\r\n                <div className=\"inputBox\">\r\n                    <input type=\"text\" name=\"color1\" required=\"required\" onChange={onColor1Change} value={color1} />\r\n                    <label>Primary Color</label>\r\n                </div>\r\n                <div className=\"inputBox\">\r\n                    <input type=\"text\" name=\"color2\" required=\"required\" onChange={onColor2Change} value={color2} />\r\n                    <label>Secondary Color</label>\r\n                </div>\r\n                <div className=\"selBox\">\r\n                    <label>Select language: </label>\r\n                    <select name=\"lang\" id=\"currsem\" className=\"select\" onChange={onLangChange} >\r\n                        <option value=\"en\">English</option>\r\n                        <option value=\"jp\">Japanese</option>\r\n                    </select>\r\n                </div>\r\n                <input type=\"submit\" value=\"Push to DB\" onClick={submitSong}/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Add\r\n","import React, {useState, useRef, useEffect} from 'react'\r\nimport \"./styles/app.css\"\r\nimport MainContent from \"./components/MainContent\"\r\nimport Library from './components/Library'\r\nimport Nav from './components/Nav'\r\nimport Add from './Add'\r\n\r\nconst Main = ({fetchedSongs}) => {\r\n    const unfilteredSongs = fetchedSongs;\r\n    const [allSongs, setAllSongs] = useState(unfilteredSongs);\r\n    const [filterStatus, setFilterStatus] = useState('all')\r\n    const [currSong, setCurrSong] = useState(allSongs[0]);\r\n    const [isplaying, setIsplaying] = useState(false);\r\n    const [time, setTime] = useState({\r\n        current: 0,\r\n        duration: 0,\r\n        animation: 0,\r\n    });\r\n    const [libraryUpdater, setLibraryUpdater] = useState(false)\r\n    const [addSongsPane, setAddSongsPane] = useState(false)\r\n    const timeUpdateHandler = (e) =>{\r\n        const current = e.target.currentTime;\r\n        const duration = e.target.duration;\r\n        const animation = (current/duration)*100\r\n        setTime({\r\n            ...time, current, duration, animation\r\n        })\r\n    };\r\n    const audioRef = useRef(null);\r\n    const onSongEndHandler = async () => {\r\n        const currentIndex = allSongs.findIndex((song) => song._id === currSong._id)\r\n        await setCurrSong(allSongs[(currentIndex + 1) % allSongs.length]);\r\n        if(isplaying) audioRef.current.play()\r\n    }\r\n    const filterHandler = () => {\r\n        switch(filterStatus){\r\n            case 'jp':\r\n                setAllSongs(unfilteredSongs.filter(e => e.lang === 'jp'))\r\n                break;\r\n            case 'en':\r\n                setAllSongs(unfilteredSongs.filter(e => e.lang === 'en'))\r\n                break;\r\n            default:\r\n                setAllSongs(unfilteredSongs)\r\n                break;\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        filterHandler()\r\n    }, [filterStatus])\r\n    return (\r\n        <>\r\n            <Nav\r\n            libraryUpdater={libraryUpdater}\r\n            setLibraryUpdater={setLibraryUpdater}\r\n            addSongsPane={addSongsPane}\r\n            setAddSongsPane={setAddSongsPane}\r\n            />\r\n            <MainContent \r\n                allSongs={allSongs}\r\n                setAllSongs={setAllSongs}\r\n                currSong={currSong}\r\n                setCurrSong={setCurrSong}\r\n                isplaying={isplaying}\r\n                setIsplaying={setIsplaying}\r\n                audioRef={audioRef}\r\n                time={time}\r\n                setTime={setTime}\r\n                libraryUpdater={libraryUpdater}\r\n                setLibraryUpdater={setLibraryUpdater}\r\n                addSongsPane={addSongsPane}\r\n                setAddSongsPane={setAddSongsPane}\r\n             />\r\n             <Library \r\n                allSongs={allSongs}\r\n                setCurrSong={setCurrSong}\r\n                audioRef={audioRef}\r\n                isplaying={isplaying}\r\n                setIsplaying={setIsplaying}\r\n                setAllSongs={setAllSongs}\r\n                libraryUpdater={libraryUpdater}\r\n                setFilterStatus={setFilterStatus}\r\n            />\r\n            <audio \r\n                ref={audioRef}\r\n                src={currSong.audio}\r\n                onTimeUpdate={timeUpdateHandler}\r\n                onLoadedMetadata={timeUpdateHandler}\r\n                onEnded={onSongEndHandler}\r\n            ></audio>\r\n            <Add\r\n                addSongsPane={addSongsPane}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport Main from './Main'\r\nconst App = () => {\r\n    const [fetchedSongs, setFetchedSongs] = useState()\r\n    useEffect(()=>{\r\n        fetchSongsFromAPI()\r\n    },[])\r\n    const fetchSongsFromAPI = async () =>{\r\n        try {\r\n            const fetch = await axios.get(\"https://imusic-rest-api.herokuapp.com/\")\r\n            setFetchedSongs(fetch.data)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        {\r\n            fetchedSongs &&(\r\n\r\n                <Main fetchedSongs={fetchedSongs}/>\r\n            )\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}